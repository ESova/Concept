// const { h, hsvg } = require('_h')
var h = require('virtual-dom/h')
const s           = require('_s')

const header      = require('_vcs/header')
// const skilltree   = require('_vcs/skilltree')
// const agent       = require('_vcs/agent')

module.exports    = RootComponent

function RootComponent (db, engine) {
  var x = s(`
    esova {
      display: flex;
      flex-direction: column;
      width: 99%;
      height: 100%;
    }
  `)
  function mainpage (theme) {
    var x = s(`
      header {
        min-height: 165px;
        ${theme}
      }
      content {
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: stretch;
        flex-grow: 1;
        ${theme}
      }
      footer {
        min-height: 165px;
        ${theme}
      }
    `)
    return [
      h('div', { className: x('header') }, header(db, engine)),
      h('div', { className: x('content') }, content(db, engine)),
      h('div', { className: x('footer') }, footer(db, engine))
    ]
  }
  function welcome (theme) {
    var x = s(`
      promocode {
        position: absolute;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        z-index: 10;
        width: 100%;
        height: 100%;
        background-color: hsla(0, 0%, 0%, 0.19);
      }
    `)
    return [
      h('div', { className: x('promocode') }, [
        h('h1', 'YAY')
      ])
    ].concat(mainpage(theme))
  }
  return function render (push) {
    db.get('esova-promocode', function (error, promocode) {
      if (error) console.error(error)
      db.get('esova-token', function (error, token) {
        if (error) console.error(error)
        //http://45.55.222.16/github_auths/access_token?promocode=<code2>
        // you send the response  { validPromo: true }  or { validPromo: false }
        var valid = promocode || token
        var theme = valid ?
          '' : 'filter: blur(2px);\n  -webkit-filter: blur(2px);'
        var vtree = h('div', { className: x('esova') }, [
          valid ? mainpage(theme) : welcome(theme)
        ])
        push(vtree)
      })
    })
  }
}
function footer () { return '' }


/******************************************************************************
  MAIN - skillbox
******************************************************************************/
var path              = require('path')
var urify             = require('urify')

var gitterchat        = require('_vcs/gitterchat')
/******************************************************************************
  ASSETS
******************************************************************************/
var forward           = urify(path.join(__dirname, 'forward.png'))
var forward_pressed   = urify(path.join(__dirname, 'forward-pressed.png'))
var forward_arrow     = urify(path.join(__dirname, 'forward-arrow.png'))
var forward_pressed   = urify(path.join(__dirname, 'forward-pressed.png'))
var back              = urify(path.join(__dirname, 'back.png'))
var back_pressed      = urify(path.join(__dirname, 'back-pressed.png'))
var back_arrow        = urify(path.join(__dirname, 'back-arrow.png'))
var back_pressed      = urify(path.join(__dirname, 'back-pressed.png'))

// module.exports = content

function content (db, engine) {
  var x = s(`
    skillbox {
      display: flex;
      flex-direction: column;
      min-height: 400px;
      min-width: 500px;
      width: 75%;
      max-width: 1000px;
    }
    skillbox-nav {
      display: flex;
      justify-content: center;
      margin-bottom: 20px;
    }
    skillbox-description {
      display: flex;
      flex-grow: 1;
      background-color: ${'#fff'};
      border-top-right-radius: 20px;
      border-bottom-right-radius: 20px;
      border-top-left-radius: 20px;
      border-bottom-left-radius: 20px;
    }
    navright {
      box-sizing: border-box;
      display: flex;
      align-items: center;
      justify-content: center;
      width: 60px;
      background-image: url(${forward});
      background-position: center;
      background-size: 100%;
      background-repeat: no-repeat;
    }
    navright--hover {
      background-color:red;
    }
    navleft--hover {
      background-color:red;
    }
    navleft {
      box-sizing: border-box;
      display: flex;
      align-items: center;
      justify-content: center;
      width: 60px;
      height: 60px;
      margin-right: 100px;
      background-position: center;
      background-image: url(${back});
      background-size: 100%;
      background-repeat: no-repeat;
    }
    chat {
      display: flex;
      position: relative;
      overflow: hidden;
      flex-grow: 1;
      min-width: 250px;
      margin-top: 20px;
      margin-bottom: 20px;
    }
    chatframe {
      position: absolute;
      width: 125%;
      height: 125%;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) scale(0.8);
    }
    lesson {
      box-sizing: border-box;
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: center;
      background-color: ${'#D6DBE1'};
      min-width: 250px;
      flex-grow: 4;
      padding: 20px;
      border-top-left-radius: 20px;
      border-bottom-left-radius: 20px;
    }
    lesson-content {
      width: 200px;
      height: 200px;

    }
  `)

  return h('div', { className: x('skillbox') }, [
    h('div', { className: x('skillbox-nav') }, [
      h('a', {
        className: x('navleft'),
        href: '#lessonY',
        onclick: function () { console.log('navleft') }
      }, [
        h('img', { className: x('navarrow'), src: back_arrow })
      ]),
      h('a', {
        className: x('navright'),
        href: '#lessonX',
        onclick: function () { console.log('navright') }
      }, [
        h('img', { className: x('navarrow'), src: forward_arrow })
      ]),
    ]),
    h('div', { className: x('skillbox-description') }, [
      h('div', { className: x('lesson') }, [
        h('div', { className: x('lesson-content') }, [
          'lorem ipsum ...'
        ])
      ]),
      // (
      //   db.put('chat', x('chat')),
      //   h('div', { className: x('chat') }, gitterchat(db, engine))
      // )
      // h('iframe', { className: x('chat'), frameBorder: '0', src: 'https://gitter.im/codingamigos/chat/~embed' })
      h('div', { className: x('chat') }, [
        h('iframe', { className: x('chatframe'), frameBorder: '0', src: 'https://gitter.im/ESova/eSovaITinfluencers/~embed' })
      ])
    ])
  ])
}
