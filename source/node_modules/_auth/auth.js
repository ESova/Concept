'use strict'
/****************************************************************************
  STACK
****************************************************************************/
const WINDOW  = require("global/window")
const minixhr = require('minixhr')
const stream  = require('readable-stream')
/******************************************************************************
  CUSTOM
******************************************************************************/
const NO_ERROR    = null
const NO_ENDPOINT = new Error('no endpoint given')
const NO_CLIENTID = new Error('no clientID given')
const NO_RIGHTS   = new Error('no right requests given')
/******************************************************************************
  MAIN
******************************************************************************/
module.exports = GithubAuth
function GithubAuth (db, cb) {
  var settings  = {  // DIGITAL OCEAN BACKEND
    endpoint        : 'http://45.55.222.16/github_auths/access_token',
    clientID        : '36645fe5dcc1d41309ab',
    rights          : ['gist']
  }
  db.get('token', function (error, token) {
    error ? auth(settings, function start (error, token) {
      if (error) { throw new Error('could not retrieve token') }
      db.put('token', token)
      cb(token)
    }) : cb(token)
  })
}
function auth (x, cb) {
  if (WINDOW.opener) {
    WINDOW.opener.sendCode(location.search.split('=')[1])
    WINDOW.close()
  } else {
    if (!x.endpoint) { return cb(NO_ENDPOINT) }
    if (!x.clientID) { return cb(NO_CLIENTID) }
    if (!x.rights)   { return cb(NO_RIGHTS)   }
    WINDOW.sendCode = function sendCode (code) {
      minixhr(x.endpoint+'?code='+code, function (data, _, __, header) {
        cb(NO_ERROR, data.length < 100 ? data : null)
      })
    }
    var host    = 'http://github.com/login/oauth/authorize?'
    var params  = 'client_id='+x.clientID+'&scope='+x.rights.join('%2C')
    WINDOW.open(host + params, '_blank')
  }
}
