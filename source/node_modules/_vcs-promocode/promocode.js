'use strict'
/******************************************************************************
  STACK BASE
******************************************************************************/
var { h, hsvg } = require('_h')
var s           = require('_s')
/******************************************************************************
  STACK EXTEND
******************************************************************************/
var path        = require('path')
var urify       = require('urify')
var minixhr     = require('minixhr')
/******************************************************************************
  CUSTOM
******************************************************************************/
var auth = require('_auth')
/******************************************************************************
  ASSETS
******************************************************************************/
var start = urify(path.join(__dirname, 'start.png'))
/******************************************************************************
  MAIN
******************************************************************************/
module.exports = PromocodeComponent

function PromocodeComponent (db, engine) {

  var x = s(`
    promocode {
      position: absolute;
      top: 0;
      display: flex;
      flex-direction: column;
      height: 100%;
      width: 100%;
      justify-content: flex-start;
      align-items: center;
      z-index: 10;
      background-color: hsla(0, 0%, 0%, 0.19);
    }
    welcome {
      margin-top: 165px;
      display: flex;
      box-sizing: content-box;
      flex-direction: column;
      justify-content: flex-start;
      align-items: center;
      min-width: 450px;
      width: 80%;
      max-width: 1200px;
      min-height: 450px;
      height: 60%;
      padding: 50px;
      background-color: hsla(0, 0%, 0%, 0.9);
      color: white;
      font-family: arial;
      font-size: 3vmin;
    }
    promoinput {
      background-color: white;
      font-size: 3vmin;
      border: 2px dotted white;
      background: none;
      color: white;
      border-right: 0;
      text-align: center;
    }
    signin {
      color: white;
      background-color: ${'#32A971'};
      border: 0;
      padding: 3px;
      font-family: arial;
      font-size: 3vmin;
    }
    signup {
      color: white;
      background-color: ${'#32A971'};
      border: 0;
      padding: 3px;
      font-family: arial;
      font-size: 3vmin;
    }
  `)

  function ACTION_signIn () { // BACKEND COMMUNICATION
    function callback (error, promocode) {
      if (error) db.put('ui/promocode', 'invalid', function (error) {
        if (error) db.put('ERROR', 'couldnt signal invalid promocode')
        else RENDER
      })
      else db.put('esova-promocode', promocode, function (error) {
        if (error) db.put('ERROR', 'couldnt store promocode')
        else db.del('ui/promocode', function (error) {
          db.put('ERROR', 'couldnt validate promocode')
        })
      })
    }
    // @HACK: used in "welcome()" component
    // @HACK: and similar in header.js component
    // @TODO: need more solid architecture for this
    var endpoint = 'http://45.55.222.16/github_auths/access_token'
    db.get('welcome/promocode', function (error, promocode) {
      if (error) return callback(error)
      var params = '?promocode='+promocode
      minixhr(endpoint+params, function (data, _, __, header) {
        // data = { validPromo: false/true, token: null/<token> }
        try {
          data = JSON.parse(data)
          if (data.validPromo) callback(null, promocode)
          else callback(new Error('no valid promo code'))
        }
        catch (e) { callback(e) }
      })
    })
  }

  engine.push({
    type: 'vtree',
    key: 'promocode',
    value: render()
  })

  return undefined // components don't return anything! @TODO: remove this line

  function render () {
    var vtree = h('div', { className: x('promocode') }, [
      h('div', { className: x('welcome') }, [
        h('h1', 'Welcome to ESova'),
        h('h2', 'Please enter your promo code'),
        h('div', [
          h('input', {
            className: x('promoinput'),
            name: 'promocode',
            hook: function (elem) {
              setTimeout(function () { elem.focus() }, 0)
            },
            onchange: function (event) {
              db.put('welcome/promocode', event.target.value)
            },
            onkeyup: function (event) {
              var key = event.which
              if (key === 13) { // enter
                db.put('welcome/promocode', event.target.value, ACTION_signIn)
              }
            },
            onblur: function (event) {
              // @HACK: prevent gitter chat from stealing focus
              // BETTER: replace gitter chat with white placeholder instead
              var elem = event.target
              elem.onblur = undefined
              setTimeout(function () { elem.focus() }, 50)
            },
            placeholder: 'Enter promocode'
          }),
          h('button', {
            className: x('signup'),
            onclick: ACTION_signIn,
          }, 'Unlock')
        ]),
        h('h3', 'or if you already have an account'),
        h('button', {
          className: x('signin'),
          onclick: function (event) { auth(db, render) }
        }, 'Sign In')
      ])
    ])
    return vtree
  }
}
