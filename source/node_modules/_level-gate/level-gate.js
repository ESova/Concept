'use strict'
/******************************************************************************
  MAIN

  VISION:

  // DATA SOURCE MAPPING
  // have spec for HTTP, WebSocket, WebRTC, Static (file watch?) sources
  // to map to db_keys

  // DATA SINK MAPPING
  // have spec for db_keys to ... static, e.g. write to file

  // USAGE
    var gate = dataGate(_dataSourceMapping, _dataSinkMapping)
    gate.pipe(db).pipe(gate)

******************************************************************************/
module.exports = levelgate

// @TODO: maybe use "duplexify" to set datasourcemapping and datasinkmapping later at runtime or even "change it" :-)
function levelgate (datasourcemapping, datasinkmapping) {
  var DB

  // MOCK API
  var gate = {
    pipe: function (db) {
      DB = db
      wirein(datasourcemapping, DB)
      return {
        pipe: function (writestream) {
          if (writestream !== gate) {
            throw new Error('pipe to real stream not supported yet')
          } else {
            wireout(datasinkmapping, db)
          }
        }
      }
    }
  }
  return gate
}
// HELPER
function wirein (datasourcemapping, db) {
  console.log('@TODO: implement data source mapping')
  // @TODO: mock at least the static stuff
  // @TODO: and maybe the AJAX stuff to get translations from github
  debugger
}
function wireout(datasinkmapping, db) {
  db.on('put', function (key, value) {
    console.log('::::::::::::::::::::::::::::::::::::::::::')
    console.log('[GATE] db.put("'+key+'",...)')
    console.log(value)
    console.log('::::::::::::::::::::::::::::::::::::::::::')
  })
  db.on('batch', function () {
    console.log('::::::::::::::::::::::::::::::::::::::::::')
    console.log('[GATE] db.batch(...)')
    console.log(arguments)
    console.log('::::::::::::::::::::::::::::::::::::::::::')
  })
  db.on('get', function () {
    console.log('::::::::::::::::::::::::::::::::::::::::::')
    console.log('[GATE] db.get(...)')
    console.log(arguments)
    console.log('::::::::::::::::::::::::::::::::::::::::::')
  })
  db.on('del', function () {
    console.log('::::::::::::::::::::::::::::::::::::::::::')
    console.log('[GATE] db.del(...)')
    console.log(arguments)
    console.log('::::::::::::::::::::::::::::::::::::::::::')
  })
}
