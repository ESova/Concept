// var SEMAPHORE   = null;
// var CONTENT     = [];
// var LANGUAGES   = {};
//
// // STATE
// var __Menu__activeLanguage  = null;
// var currentLanguage         = config.language;

// USAGE
githubLevel({ url: env.backend }, function (error, data, version) {
  if (error) { console.error(error); throw error; }

  var temp    = {};
  var CONTENT = undefined;

  data.forEach(function (item) {
    githubLevel({ url:item.url }, function (error, data, version) {
      var jsonmarked  = b64_to_utf8(data.content);
      var name        = data.name.split('.')[0];
      if (name === 'index') {
        CONTENT = jmm.parse(jsonmarked).CONTENT;
        prepareArrayContainer(CONTENT);
        CONTENT.forEach(function (title, idx) {
          if(temp[title]) {
            addContent(idx, title, temp[title]);
          }
        });
      } else if (!CONTENT) {
        temp[name] = jsonmarked;
      } else {
        CONTENT.forEach(function (title, idx) {
          if(name === title) {
            addContent(idx, name, jsonmarked);
          }
        });
      }
    });
  });

});


function prepareArrayContainer (CONTENT) {
  SEMAPHORE = CONTENT.length;
}
function addContent (idx, name, jsonmarked) {
  SEMAPHORE--;
  CONTENT[idx] = {
    name: name,
    lang: {}
  };
  var object = jmm.parse(jsonmarked);
  var html   = object.__content__;
  var langs  = html.split('<hr>').filter(function(x){return x;});
  var reg = /<p><a href="@([\s\S]*)"><\/a><\/p>([\s\S]*)/;
  langs.forEach(function(x){
    var tmp     = x.match(reg);
    var lang    = tmp[1];
    var content = tmp[2];
    CONTENT[idx].lang[lang] = content;
    if (!LANGUAGES[lang]) { LANGUAGES[lang] = true; }
  });

  if (!SEMAPHORE) { INIT(); }

}
// FILL "CONTENT" & FILL "NEWS"
function UPDATE_contentAndNews () {
  CONTENT.forEach(function (x, idx) {
    if (x.name === 'news') {
      var API = (function (languages) {
        return {
          changeLanguage(lang) {
            __news.innerHTML = x.lang[currentLanguage];
          }
        };
      })(x.lang);
      __news.innerHTML = x.lang[config.language];
      CONTENT[idx] = API;
    } else {
      var item = '<div class="wizardamigos__infobox"></div>';
      var tmp = (__.innerHTML=item,__.childNodes[0]);
      CONTENT[idx] = markdownbox({
        container : tmp,
        options   : { defaultLanguage: config.language },
        data      : x
      });
      __content.appendChild(tmp);
    }
  });
}
// FILL "MENU"
function UPDATE_languages () {
  for (var lang in LANGUAGES) {
    (function (lang) {
      var isCurrentLanguage = (lang === currentLanguage);
      var item = '<a class="wizardamigos__lang' +
        '  wizardamigos__lang--STATE_' +
        (isCurrentLanguage ? 'active' : 'inactive') + '">'+lang+'</a>';
      var tmp  = (__.innerHTML=item,__.childNodes[0]);
      __Menu__activeLanguage = tmp;
      __menu.appendChild(tmp);
    })(lang);
  }
}
// FILL "WEBRING"
function UPDATE_webring () {
  githubLevel({ url: env.backend }, function (error, data, version) {
    if (error) { console.error(error); throw error; }

    data.forEach(function (item) {
      var name = item.name.split('.')[0];
      if (name === 'wallofinspiration') {
        githubLevel({ url: item.url }, function (error, data, version) {
          var jsonmarked        = b64_to_utf8(data.content);
          var wallofinspiration = jmm.parse(jsonmarked).__content__;

          var div = document.createElement('div');
          div.innerHTML = wallofinspiration;

          var partners = [];

          [].forEach.call(div.querySelectorAll('h3'), function (item) {
            partners.push({ name: item.innerHTML });
          });
          [].forEach.call(div.querySelectorAll('a'), function (item, i) {
            partners[i].website = item.getAttribute('href');
          });
          [].forEach.call(div.querySelectorAll('img'), function (item, i) {
            partners[i].logo = item.getAttribute('src');
            partners[i].location = item.getAttribute('alt');
          });

          partners.forEach(function add (partner) {
            organizationprofile(__partners, {
              name: partner.name,
              logo: partner.logo,
              location: partner.location,
              website: partner.website
            });
          });

        });
      }
    });
  });
}
function b64_to_utf8( str ) {
  str = str.replace(/(\r\n|\n|\r)/gm,"");
  return decodeURIComponent(escape(window.atob( str )));
}
